/* You can add global styles to this file, and also import other style files */
:root {
    --color-primary: #004859;
    --color-accent: #ff8888;
    --color-accent-secondary: #ffc15a;
    --color-accent-secondary-darker: #faa415;
    --color-success: #4caf50;
    --color-error: #ff5722;
    --color-info: #449eff;
    --color-background: #eceff1;
    --color-text: #263238;
    --color-text-light: #607d8b;
    --height-header: 64px;
    --height-footer: 48px;
    --border-radius: 10px;
    --spacing-step: 8px;
    --font-size-h1: 34px;
}

body, html, p, h1, h2, h3, h4, h5, span {
    padding: 0;
    margin: 0;
}
body {
    font-family: 'Poppins';
    background-color: var(--color-background);
}

a {
    color: var(--color-accent);
    text-decoration: none;
    &:hover {
    text-decoration: underline;
    }
}

form {
    padding: calc(var(--spacing-step) * 3);
    box-sizing: border-box;
    border-radius: var(--border-radius);
    background: var(--color-background);
    min-width: 395px;
    width: 100%;
    max-width: 450px;
}

label, input:not([type="checkbox"]), fieldset, button {
    width: 100%;
    box-sizing: border-box;
}

input[type="checkbox"] {
    width: 16px;
    height: 16px;
    margin-right: var(--spacing-step);
}

fieldset {
    border-radius: var(--border-radius);
    border: 1px solid var(--color-text-light);
    margin-top: var(--spacing-step);
}

button {
    margin-top: calc(var(--spacing-step) * 2);
    background-color: var(--color-accent-secondary);
    border: var(--color-accent-secondary-darker) 1px solid;
    color: var(--color-text);
    font-weight: bold;
    cursor: pointer;
    &:hover {
        opacity: 0.8;
    }
    &:active {
        background-color: var(--color-accent-secondary-darker);
        border: var(--color-accent-secondary) 1px solid;
    }
    &.reset-button {
        background-color: transparent;
        border: 1px solid var(--color-primary);
    }
}

input, select {
    border: var(--color-text) solid 1px;
}

legend {
    font-weight: bold;
}

input, button, select {
    border-radius: 5px;
    font-size: 18px;
    padding: 10px 11px;
}

select {
    width: 100%;
}

// Template-Driven Form styles.
// Use "input:valid button" instead of ng-valid when using ngNativeValidate in the form
// .ng-valid.ng-dirty:not([ngModelGroup]):not(form):not([formArrayName]):not([formGroupName]) {
//     border: 1px solid var(--color-success);
// }

// Use "input:invalid button" instead of ng-valid when using ngNativeValidate in the form
// .ng-invalid.ng-dirty:not([ngModelGroup="address"]):not([formArrayName]):not([formGroupName]) {
//     border: 1px solid var(--color-error);
// }

// Reactive Forms styles
.ng-valid.ng-dirty:not([formGroupName]):not([formArrayName]):not([ngModelGroup]):not([formGroup]):not(paper-textarea) {
    border: 1px solid var(--color-success);
}

.ng-invalid.ng-dirty:not([formArrayName]):not([formGroupName="address"]):not(form) {
    border: 1px solid var(--color-error);
}

// Use "form:invalid button" instead of button[disabled] when using ngNativeValidate in the form
button[disabled] {
    background-color: rgba(0,0,0,0.15);
    border-color: rgba(0,0,0,0.1);
    pointer-events: none;
}

@keyframes error-message-animation {
    from {
        opacity: 0;
        transform: translateY((-6px));
    }
    to {
        opacity: 1;
        transform: translateY(0px);
    }
}

@mixin input-message() {
    font-size: 12px;
    box-sizing: border-box;
    padding: 2px 13px;
    animation-name: input-message-animation;
    animation-duration: 300ms;
}

.input-error {
    @include input-message();
    color: var(--color-error);
}

.input-info {
    @include input-message();
    color: var(--color-info);
}

.review-textarea {
    border-radius: var(--border-radius);
    background-color: white;
    padding: calc(var(--spacing-step) * 2);
    margin-top: var(--spacing-step);
    min-height: 74px;
    box-sizing: border-box;
    h4 {
      margin-bottom: var(--spacing-step);
      &:empty:before {
        content: attr(data-placeholder);
        opacity: 0.6;
      }
    }
    p, div {
      &:empty:before {
        content: attr(data-placeholder);
        opacity: 0.6;
      }
    }
  }
